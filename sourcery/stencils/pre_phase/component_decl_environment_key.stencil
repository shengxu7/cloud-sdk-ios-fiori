{# Utility function which returns the correct Style struct, for the unwrapped (non-optional) var type #}
{% macro _StyleType unwrappedTypeName %}
{% if unwrappedTypeName == "String" or unwrappedTypeName == "[String]" %}
TextStyle
{% elif unwrappedTypeName == "Image" %}
ImageStyle
{% else %}
NothingStyle
{% endif %}
{% endmacro %}

{% macro StyleType unwrappedTypeName %}{% set tmp %}{% call _StyleType unwrappedTypeName %}{% endset %}{{tmp|removeNewlines}}{% endmacro %}
// sourcery:file:EnvironmentKey+Styles.generated.swift
import SwiftUI
{% for type in types.implementing._ComponentGenerating %}
{% for variable in type.variables where variable|!annotated:"no_style" %}
{% set AStyle %}{% call StyleType variable.typeName.unwrappedTypeName %}{% endset %}

struct {{variable.name | upperFirstLetter }}StyleKey: EnvironmentKey {
    public static let defaultValue: {{ AStyle }} = {{ AStyle }}()
}

struct {{variable.name | upperFirstLetter }}ModifierKey: EnvironmentKey {
    public static let defaultValue = AnyViewModifier { $0 }
}

struct {{variable.name | upperFirstLetter }}StyleClassPathKey: EnvironmentKey {
    public static let defaultValue: [String] = []
}

struct {{variable.name | upperFirstLetter }}StyleClassModifierKey: EnvironmentKey {
    public static let defaultValue = AnyViewModifier { $0 }
}

{% endfor %}
{% endfor %}
// sourcery:end